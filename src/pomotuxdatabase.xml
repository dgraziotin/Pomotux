<?xml version="1.0"?>
<!DOCTYPE database SYSTEM "litesql.dtd"> 
<database name="PomotuxDatabase" namespace="pomotuxdatabase">
	
	<!-- maps Activity object into database -->
    <object name="Activity">
        <field name="mDescription" type="string"></field>
        <field name="mInsertionDate" type="date"></field>
        <field name="mDeadline" type="date"></field>
        <field name="mNumPomodoro" type="integer" default="0"></field>
        <field name="mOrder" type="integer" default="0"></field>
        <field name="mIsFinished" type="boolean" default="false"></field>
        <method name="Delete" returntype="void">
            <param name="rDatabase" type="const litesql::Database&amp;"/>
            <param name="rCurrentActivity" type="Activity&amp;"/>
            <param name="rAIS" type="ActivityInventorySheet&amp;"/>
            <param name="rTTS" type="TodoTodaySheet&amp;"/>
        </method>
        <method name="Modify" returntype="void">
			<param name="rDatabase" type="const litesql::Database&amp;"/>
            <param name="rCurrentActivity" type="Activity&amp;"/>
            <param name="newDeadline" type="int"/>
            <param name="newDescription" type="std::string"/>
        </method>
    </object>

	<!-- maps AIS object into database -->
    <object name="ActivityInventorySheet">
        <method name="InsertActivity" returntype="void">
            <param name="rDatabase" type="const litesql::Database&amp;"/>
            <param name="rNewActivity" type="Activity&amp;"/>
            <param name="rAIS" type="ActivityInventorySheet&amp;"/>
        </method>
    </object>
	
	<!-- maps TTS object into database -->
    <object name="TodoTodaySheet">
        <method name="ScheduleActivity" returntype="void">
            <param name="rDatabase" type="const litesql::Database&amp;"/>
            <param name="rNewActivity" type="Activity&amp;"/>
            <param name="rAIS" type="ActivityInventorySheet&amp;"/>
            <param name="rTTS" type="TodoTodaySheet&amp;"/>
        </method>
        <method name="FinishActivity" returntype="void">
            <param name="rDatabase" type="const litesql::Database&amp;"/>
            <param name="rCurrentActivity" type="Activity&amp;"/>
            <param name="rTTS" type="TodoTodaySheet&amp;"/>
        </method>
        <method name="PostponeActivity" returntype="void">
            <param name="rDatabase" type="const litesql::Database&amp;"/>
            <param name="rCurrentActivity" type="Activity&amp;"/>
            <param name="rTTS" type="TodoTodaySheet&amp;"/>
        </method>
        <method name="MoveActivity" returntype="void">
            <param name="rDatabase" type="const litesql::Database&amp;"/>
            <param name="rCurrentActivity" type="Activity&amp;"/>
            <param name="rCurrentTDS" type="TodoTodaySheet&amp;"/>
            <param name="direction" type="const int"/>
        </method>
        <method name="GetMaxActivityOrder" returntype="int">
            <param name="rDatabase" type="const litesql::Database&amp;"/>
            <param name="rTTS" type="TodoTodaySheet&amp;"/>
        </method>
        <method name="MakeConsistent" returntype="void">
            <param name="rDatabase" type="const litesql::Database&amp;"/>
            <param name="rTTS" type="TodoTodaySheet&amp;"/>
        </method>
    </object>
	
	<!-- creates a many-to-one relationship between Activity and AIS -->
    <relation name="ActivityInAIS">
        <relate object="Activity" limit="many"></relate>
        <relate object="ActivityInventorySheet" limit="one"></relate>
    </relation>

	<!-- creates a many-to-one relationship between Activity and TTS -->
    <relation name="ActivityInTTS">
        <relate object="Activity" limit="many"></relate>
        <relate object="TodoTodaySheet" limit="one"></relate>
    </relation>
	
</database>
